<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Cartif.XamlResources">

    <Style x:Key="TabControlLeftStyle" TargetType="{x:Type TabControl}"
            BasedOn="{StaticResource MetroTabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource AccentSelectedColorBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true"
                            KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel Margin="0,0,0,0" x:Name="HeaderPanel" Grid.Column="0" Grid.Row="0"
                                Background="{StaticResource TabPanelBrush}" IsItemsHost="true"
                                Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter Grid.Column="0" Grid.Row="1"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost"
                                    ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemLeftStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource MetroTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!-- The Grid helps defining the general height of TabItems. -->
                    <Grid Height="35" Name="RootGrid" VerticalAlignment="Bottom" Cursor="Hand">
                        <!--
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage. 
                     -->
                        <Border Name="Border" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0">
                            <!-- This is where the Content of the TabItem will be rendered. -->
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                    HorizontalAlignment="Left" ContentSource="Header" Margin="25,2,25,2"
                                    MinWidth="150" RecognizesAccessKey="True" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- The appearance of a TabItem when it's inactive/unselected -->
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter TargetName="RootGrid" Property="Background"
                                    Value="{StaticResource TabPanelBrush}" />
                            <!--<Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />-->
                            <Setter Property="Foreground" Value="{StaticResource TextHighlightBrush}" />
                            <Setter Property="FontWeight" Value="Normal" />
                        </Trigger>

                        <!--
                        The appearance of a TabItem when it's disabled
                        (in addition to Selected=False)
                     -->
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource TabItem_BackgroundBrush_Disabled}" />
                            <Setter Property="Foreground" Value="{StaticResource TabItem_TextBrush_Disabled}" />
                        </Trigger>-->

                        <!-- The appearance of a TabItem when the mouse hovers over it -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="Foreground" Value="{StaticResource TextHighlightBrush}" />
                            <!--<Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />-->
                            <Setter Property="Background" TargetName="RootGrid"
                                    Value="{StaticResource TabItemHoverBrush}" />
                            <Setter Property="FontWeight" Value="Normal" />
                        </MultiTrigger>

                        <!-- The appearance of a TabItem when it's active/selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <!--We want the selected TabItem to always be on top.-->
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="RootGrid" Property="Background"
                                    Value="{StaticResource AccentSelectedColorBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource TextHighlightBrush}" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MetroTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!-- The Grid helps defining the general height of TabItems. -->
                    <Grid Height="35" Name="RootGrid" VerticalAlignment="Bottom" Cursor="Hand">
                        <!--
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage. 
                     -->
                        <Border Name="Border" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0">
                            <!-- This is where the Content of the TabItem will be rendered. -->
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                    HorizontalAlignment="Left" ContentSource="Header" Margin="25,2,25,2"
                                    MinWidth="150" RecognizesAccessKey="True" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- The appearance of a TabItem when it's inactive/unselected -->
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter TargetName="RootGrid" Property="Background"
                                    Value="{StaticResource AccentSelectedColorBrush}" />
                            <!--<Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />-->
                            <Setter Property="Foreground" Value="{StaticResource TextHighlightBrush}" />
                            <Setter Property="FontWeight" Value="Normal" />
                        </Trigger>

                        <!--
                        The appearance of a TabItem when it's disabled
                        (in addition to Selected=False)
                     -->
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Panel.ZIndex" Value="80" />
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource TabItem_BackgroundBrush_Disabled}" />
                            <Setter Property="Foreground" Value="{StaticResource TabItem_TextBrush_Disabled}" />
                        </Trigger>-->

                        <!-- The appearance of a TabItem when the mouse hovers over it -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="Foreground" Value="{StaticResource TextHighlightBrush}" />
                            <!--<Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />-->
                            <Setter Property="Background" TargetName="RootGrid"
                                    Value="{StaticResource TabItemHoverBrush}" />
                            <Setter Property="FontWeight" Value="Normal" />
                        </MultiTrigger>

                        <!-- The appearance of a TabItem when it's active/selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <!--We want the selected TabItem to always be on top.-->
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="RootGrid" Property="Background"
                                    Value="{StaticResource TabPanelBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource TextHighlightBrush}" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>